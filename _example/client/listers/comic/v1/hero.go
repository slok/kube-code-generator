// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/slok/kube-code-generator/example/apis/comic/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HeroLister helps list Heros.
// All objects returned here must be treated as read-only.
type HeroLister interface {
	// List lists all Heros in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Hero, err error)
	// Get retrieves the Hero from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Hero, error)
	HeroListerExpansion
}

// heroLister implements the HeroLister interface.
type heroLister struct {
	indexer cache.Indexer
}

// NewHeroLister returns a new HeroLister.
func NewHeroLister(indexer cache.Indexer) HeroLister {
	return &heroLister{indexer: indexer}
}

// List lists all Heros in the indexer.
func (s *heroLister) List(selector labels.Selector) (ret []*v1.Hero, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Hero))
	})
	return ret, err
}

// Get retrieves the Hero from the index for a given name.
func (s *heroLister) Get(name string) (*v1.Hero, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("hero"), name)
	}
	return obj.(*v1.Hero), nil
}
