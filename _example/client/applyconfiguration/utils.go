// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	v1 "github.com/slok/kube-code-generator/example/apis/comic/v1"
	comicv1 "github.com/slok/kube-code-generator/example/client/applyconfiguration/comic/v1"
	internal "github.com/slok/kube-code-generator/example/client/applyconfiguration/internal"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=comic.kube-code-generator.slok.dev, Version=v1
	case v1.SchemeGroupVersion.WithKind("Hero"):
		return &comicv1.HeroApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("HeroSpec"):
		return &comicv1.HeroSpecApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("HeroStatus"):
		return &comicv1.HeroStatusApplyConfiguration{}

	}
	return nil
}

func NewTypeConverter(scheme *runtime.Scheme) *testing.TypeConverter {
	return &testing.TypeConverter{Scheme: scheme, TypeResolver: internal.Parser()}
}
